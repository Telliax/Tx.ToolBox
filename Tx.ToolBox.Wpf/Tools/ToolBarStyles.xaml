<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:templates="clr-namespace:Tx.ToolBox.Wpf.Templates"
                    xmlns:tools="clr-namespace:Tx.ToolBox.Wpf.Tools"
                    xmlns:behaviors="clr-namespace:Tx.ToolBox.Wpf.Behaviors"
                    xmlns:buttons="clr-namespace:Tx.ToolBox.Wpf.Tools.Buttons"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    xmlns:fa="http://schemas.fontawesome.io/icons/"
                    xmlns:converters="clr-namespace:Tx.ToolBox.Wpf.Converters"
                    xmlns:text="clr-namespace:Tx.ToolBox.Wpf.Tools.Text"
                    xmlns:collections="clr-namespace:System.Collections;assembly=mscorlib">

    <Style TargetType="tools:ToolBarView" BasedOn="{StaticResource {x:Type ToolBar}}">
        <Setter Property="ItemsSource" Value="{Binding Tools}"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="ItemTemplateSelector" Value="{templates:AttributeTemplateSelectorEx}"/>
    </Style>
    
    <DataTemplate x:Key="ButtonTemplate">
        <DockPanel MinWidth="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" Name="Panel" VerticalAlignment="Stretch">
            <i:Interaction.Behaviors>
                <behaviors:FadeOutOnDisabled/>
            </i:Interaction.Behaviors>

            <TextBlock Text="{Binding Text}" VerticalAlignment="Center" Margin="1" DockPanel.Dock="Right">
                <i:Interaction.Behaviors>
                    <behaviors:CollapseOnEmptyText/>
                </i:Interaction.Behaviors>
            </TextBlock>

            <Border>
                <Image Source="{Binding Image}" Stretch="Uniform" Margin="1">
                    <i:Interaction.Behaviors>
                        <behaviors:CollapseOnEmptyImage/>
                    </i:Interaction.Behaviors>
                </Image>
            </Border>
        </DockPanel>
    </DataTemplate>

    <DataTemplate x:Key="AsyncButtonTemplate">
        <Border>
            <Grid>
                <ContentControl VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Content="{Binding}" ContentTemplate="{StaticResource ButtonTemplate}" Name="Button"/>
                <fa:ImageAwesome Icon="Spinner" Spin="False" Visibility="Collapsed" SpinDuration="5" Name="Spinner" HorizontalAlignment="Center"/>
            </Grid>
        </Border>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Command.IsExecuting}" Value="True">
                <Setter TargetName="Button" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="Spinner" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Spinner" Property="Spin" Value="True"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style TargetType="Button" x:Key="ButtonStyle" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
        <Setter Property="Command" Value="{Binding Command}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="ToolTip" Value="{Binding ToolTip}"/>
        <Setter Property="Visibility" Value="{Binding IsVisible, Converter={converters:BoolToVisibilityConverter}}"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="Content" Value="{Binding}"/>
        <Setter Property="ContentTemplate" Value="{StaticResource ButtonTemplate}"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
    </Style>

    <Style TargetType="{x:Type buttons:ButtonToolView}" BasedOn="{StaticResource ButtonStyle}"/>

    <Style TargetType="buttons:AsyncButtonToolView" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="ContentTemplate" Value="{StaticResource AsyncButtonTemplate}"/>
    </Style>

    <Style TargetType="ToggleButton" x:Key="ToggleButtonStyle" BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}">
        <Setter Property="Command" Value="{Binding Command}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="ToolTip" Value="{Binding ToolTip}"/>
        <Setter Property="Visibility" Value="{Binding IsVisible, Converter={converters:BoolToVisibilityConverter}}"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="Content" Value="{Binding}"/>
        <Setter Property="ContentTemplate" Value="{StaticResource ButtonTemplate}"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="IsChecked" Value="{Binding IsChecked}"/>
    </Style>

    <Style TargetType="buttons:ToggleButtonToolView" BasedOn="{StaticResource ToggleButtonStyle}"/>

    <Style TargetType="TextBlock" x:Key="TextBlockStyle">
        <Setter Property="Margin" Value="1"/>
        <Setter Property="ToolTip" Value="{Binding ToolTip}"/>
        <Setter Property="Visibility" Value="{Binding IsVisible, Converter={converters:BoolToVisibilityConverter}}"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="Text" Value="{Binding Text}"/>
        <Setter Property="IsEnabled" Value="{Binding IsEnabled}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="{Binding Width}"/>
        <Setter Property="behaviors:Behaviors.Source">
            <Setter.Value>
                <collections:ArrayList>
                    <behaviors:FadeOutOnDisabled/>
                </collections:ArrayList>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="text:LabelToolView" BasedOn="{StaticResource TextBlockStyle}"/>
    
    <Style TargetType="TextBox" x:Key="TextBoxStyle" BasedOn="{StaticResource {x:Static ToolBar.TextBoxStyleKey}}">
        <Setter Property="Margin" Value="1"/>
        <Setter Property="ToolTip" Value="{Binding ToolTip}"/>
        <Setter Property="Visibility" Value="{Binding IsVisible, Converter={converters:BoolToVisibilityConverter}}"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="Text" Value="{Binding Text}"/>
        <Setter Property="IsEnabled" Value="{Binding IsEnabled}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="{Binding Width}"/>
        <Setter Property="behaviors:Behaviors.Source">
            <Setter.Value>
                <collections:ArrayList>
                    <behaviors:UpdateTextSourceOnEnter/>
                </collections:ArrayList>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="text:TextToolView" BasedOn="{StaticResource TextBoxStyle}"/>
</ResourceDictionary>